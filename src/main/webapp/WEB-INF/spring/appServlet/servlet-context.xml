<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->

	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" />-->
	
	<mvc:resources mapping="/static/**" location="/WEB-INF/static/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
<!-- 	<beans:bean id="urlViewController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController" />
	<beans:bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
	<beans:property name="mappings">
	<beans:value>/**/*.html=urlViewController</beans:value>
	</beans:property>
	</beans:bean> -->
	
<!-- 	<beans:bean class="org.springframework.web.servlet.mvc.UrlFilenameViewController">
    <beans:property name="prefix" value="/WEB-INF/static/html/"/>
    <beans:property name="suffix" value=".html"/>
</beans:bean> -->

<!-- 	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	<beans:property name="viewClass"  value= "org.springframework.web.servlet.view" />
	    <beans:property name="prefix" value="/WEB-INF/static/"/>
	    <beans:property name="suffix" value=".html"/>
	</beans:bean> -->
	
	
	    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <beans:property name="url"
            value="jdbc:mysql://localhost:3306/moviedb" />
        <beans:property name="username" value="root" />
        <beans:property name="password" value="" />
    </beans:bean>
 
    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>com.cinecrawler.myapp.RegisterDetails</beans:value>
                <beans:value>com.cinecrawler.myapp.LoginDetails</beans:value>
                <beans:value>com.cinecrawler.myapp.SearchDetails</beans:value>
            </beans:list>
        </beans:property>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
                </beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
     
<!--     <beans:bean id="regDAO" class="com.cinecrawler.dao.RegisterDAOImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
    <beans:bean id="registerService" class="com.cinecrawler.service.RegisterServiceImpl">
        <beans:property name="registerDAO" ref="regDAO"></beans:property>
    </beans:bean> -->
    

	<context:component-scan base-package="com.cinecrawler.myapp, com.cinecrawler.dao, com.cinecrawler.service" />
	
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
     
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>
</beans:beans>
